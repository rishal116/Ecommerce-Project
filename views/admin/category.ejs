<%- include("../../views/partials/admin/header") %>

<!-- CSS Styles -->
<style>
  /* Breadcrumb Styling */
  .breadcrumb {
      display: flex;
      align-items: center;
      font-size: 14px;
      background-color: #F9FAFB;
      padding: 10px 16px;
      border-radius: 8px;
      margin-bottom: 20px;
  }

  .breadcrumb a {
      color: #4B5563;
      text-decoration: none;
      margin-right: 8px;
      font-weight: 500;
  }

  .breadcrumb a:hover {
      text-decoration: underline;
  }

  .breadcrumb span {
      color: #9CA3AF;
      margin-right: 8px;
  }

  /* Search Bar */
  .search-container {
      display: flex;
      justify-content: center;
      margin-bottom: 20px;
  }

  .search-container .input-group {
      max-width: 500px;
      width: 100%;
  }

  /* Card Styling */
  .card {
      background: #fff;
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      margin-bottom: 20px;
  }

  /* Form Styling */
  .form-container {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      background: #f9f9f9;
  }

  .form-control {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 6px;
      box-sizing: border-box;
      margin-bottom: 15px;
  }

  .btn-primary {
      width: 100%;
      padding: 10px;
      border-radius: 6px;
      font-size: 16px;
      background-color: #3B82F6;
      color: white;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s;
  }

  .btn-primary:hover {
      background-color: #2563EB;
  }

  /* Table Styling */
  .table-container {
      width: 100%;
      overflow-x: auto;
  }

  .table {
      width: 100%;
      border-collapse: collapse;
      border-radius: 10px;
      overflow: hidden;
  }

  .table thead {
      background-color: #F3F4F6;
      color: #4B5563;
      font-weight: bold;
  }

  .table th,
  .table td {
      padding: 12px;
      text-align: left;
      border-bottom: 1px solid #E5E7EB;
  }

  .table tbody tr:nth-child(odd) {
      background-color: #FFFFFF;
  }

  .table tbody tr:nth-child(even) {
      background-color: #F9FAFB;
  }

  .table tbody tr:hover {
      background-color: #F3F4F6;
  }

  .table td {
      color: #4B5563;
  }

  /* Buttons */
  .btn-action {
      padding: 8px 14px;
      font-size: 14px;
      border-radius: 6px;
      text-decoration: none;
      transition: background 0.3s;
      display: inline-block;
  }

  .btn-list {
      background-color: #BBF7D0;
      color: #065F46;
  }

  .btn-list:hover {
      background-color: #86EFAC;
  }

  .btn-unlist {
      background-color: #FCA5A5;
      color: #7F1D1D;
  }

  .btn-unlist:hover {
      background-color: #F87171;
  }

  .btn-edit {
      background-color: #3B82F6;
      color: #fff;
  }

  .btn-edit:hover {
      background-color: #2563EB;
  }

  .btn-info {
      background-color: #93C5FD;
      color: #1E3A8A;
  }

  .btn-info:hover {
      background-color: #60A5FA;
  }

  /* Badge Styling */
  .badge {
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: 500;
  }

  .text-success {
      background-color: #D1FAE5;
      color: #065F46;
  }

  .text-danger {
      background-color: #FEE2E2;
      color: #B91C1C;
  }

  /* Pagination */
  .pagination {
      display: flex;
      justify-content: center;
      list-style: none;
      padding: 0;
  }

  .pagination .page-item {
      margin: 0 4px;
  }

  .pagination .page-link {
      display: block;
      padding: 8px 12px;
      border-radius: 6px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
      transition: background-color 0.3s;
  }

  .pagination .page-item:hover .page-link {
      background-color: #f5f5f5;
  }

  .pagination .page-item.active .page-link {
      background-color: #3B82F6;
      color: white;
      border-color: #3B82F6;
  }

  .error-message {
      color: #DC2626;
      font-size: 12px;
      margin-top: -10px;
      margin-bottom: 10px;
      display: none;
  }
</style>

<!-- Main Content -->
<section class="content-main">
    <!-- Header with Breadcrumb -->
    <div class="content-header">
        <div class="breadcrumb">
            <a href="/admin">Dashboard</a>
            <span>â€º</span>
            <a href="/admin/Category">Category</a>
        </div>
    </div>

    <!-- Search Bar -->
    <div class="search-container">
        <form action="/admin/category/" method="get" class="input-group input-group-sm border rounded-pill">
            <input type="text" class="form-control border-0 rounded-pill" placeholder="Search categories" name="search">
            <button class="btn btn-outline-primary border-0" type="submit">Search</button>
        </form>
    </div>

    <!-- Main Card Container -->
    <div class="card">
        <div class="card-body">
            <div class="row">
                <!-- Category Form Column -->
                <div class="col-md-3">
                    <div class="form-container">
                        <h4 class="mb-3">Add New Category</h4>
                        <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                            <div class="mb-3">
                                <label for="product_name" class="form-label">Name</label>
                                <input type="text" name="name" placeholder="Category name" class="form-control" id="product_name" required />
                                <div id="name-error" class="error-message"></div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label" for="descriptionId">Description</label>
                                <textarea placeholder="Category description" name="description" class="form-control" id="descriptionId" rows="4" required></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

                            <button class="btn btn-primary" type="submit">Create Category</button>
                        </form>
                    </div>
                </div>

                <!-- Category Table Column -->
                <div class="col-md-9">
                    <h4 class="mb-3">Category List</h4>
                    <div class="table-container">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Offer Price</th>
                                    <th>Offer</th>
                                    <th>Status</th>
                                    <th>List/Unlist</th>
                                    <th>Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% cat.reverse().forEach((category) => { %>
                                <tr>
                                    <td><%= category.name %></td>
                                    <td><%= category.description %></td>
                                    <td>
                                        <% if (category.categoryOffer) { %>
                                        <%= category.categoryOffer %>%
                                        <% } else { %> 0% <% } %>
                                    </td>
                                    <td>
                                        <% if (category.categoryOffer === 0) { %>
                                        <a href="#" class="btn btn-info btn-action" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                                        <% } else { %>
                                        <a href="#" class="btn btn-info btn-action" onclick="removeOffer('<%= category._id %>')">Remove</a>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (category.isListed) { %>
                                        <span class="badge text-success">Listed</span>
                                        <% } else { %>
                                        <span class="badge text-danger">Unlisted</span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (category.isListed) { %>
                                        <a href="/admin/listCategory?id=<%= category._id %>" class="btn btn-unlist btn-action">Unlist</a>
                                        <% } else { %>
                                        <a href="/admin/unlistCategory?id=<%= category._id %>" class="btn btn-list btn-action">List</a>
                                        <% } %>
                                    </td>
                                    <td>
                                        <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-edit btn-action">Edit</a>
                                    </td>
                                </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    <div class="container mt-3">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mb-4">
                <% for(let i=1; i<=totalPages; i++) { %>
                <li class="page-item <%= (i===currentPage) ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                </li>
                <% } %>
            </ul>
        </nav>
    </div>
</section>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>
function handleFormSubmit(event) {
    event.preventDefault();
    if (!validateForm()) {
        return;
    }
    
    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to add this category?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, add it!"
    })
    .then((result) => {
        if (result.isConfirmed) {
            const name = document.getElementById("product_name").value.trim();
            const description = document.getElementById("descriptionId").value.trim();
            
            fetch("/admin/addCategory", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ name, description })
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    throw new Error(data.error);
                }
                Swal.fire("Success!", "Category has been successfully added!", "success")
                .then(() => location.reload());
            })
            .catch(error => {
                Swal.fire("Oops!", error.message || "An error occurred while adding the category.", "error");
            });
        }
    });
}

function validateForm() {
    clearErrorMessages();
    let isValid = true;
    const name = document.getElementById("product_name").value.trim();
    const description = document.getElementById("descriptionId").value.trim()
    
    if (name === "") {
        displayErrorMessage("name-error", "Please enter a name")
        isValid = false
    } else if (name.length < 3) {
        displayErrorMessage("name-error", "Name must be at least 3 characters long")
        isValid = false
    } else if (!/^[A-Za-z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only letters and spaces")
        isValid = false
    }

    if (description === "") {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    document.querySelectorAll(".error-message").forEach(element => {
        element.innerText = "";
        element.style.display = "none";
    });
}

async function addOffer(categoryId) {
    const { value: amount } = await Swal.fire({
        title: "Offer in percentage",
        input: "number",
        inputLabel: "Percentage",
        inputPlaceholder: "%",
        inputAttributes: { min: 1, max: 99, step: 1 },
        showCancelButton: true
    });

    if (!amount) return;

    if (amount < 1 || amount > 99) {
        return Swal.fire("Invalid Input", "Offer percentage should be between 1 and 99.", "error");
    }

    try {
        const response = await fetch("/admin/addCategoryOffer", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ percentage: amount, categoryId })
        });

        const data = await response.json();
        if (response.ok && data.status === true) {
            Swal.fire("Offer Added", "The offer has been successfully added.", "success").then(() => location.reload());
        } else {
            throw new Error(data.message || "Failed to add offer.");
        }
    } catch (error) {
        Swal.fire("Error", error.message, "error");
    }
}

async function removeOffer(categoryId) {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to remove this offer?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, remove it!"
    }).then(async (result) => {
        if (!result.isConfirmed) return;

        try {
            const response = await fetch("/admin/removeCategoryOffer", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ categoryId })
            });

            const data = await response.json();
            if (response.ok && data.status === true) {
                Swal.fire("Offer Removed", "The offer has been successfully removed.", "success")
                .then(() => location.reload());
            } else {
                throw new Error(data.message || "Failed to remove offer.");
            }
        } catch (error) {
            Swal.fire("Error", error.message, "error");
        }
    });
}
</script>

<%- include("../../views/partials/admin/footer") %>