<%- include("../../views/partials/admin/header") %>

<head>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        /* General Styling */
        body {
            background-color: #f3f4f6;
            color: #333;
            font-family: 'Poppins', sans-serif;
        }

        h1 {
            text-align: center;
            color: #1f2937;
            margin-bottom: 20px;
        }

        .container {
            max-width: 1100px;
            margin: auto;
            padding: 20px;
        }

        /* Order Grid */
        .order-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }

        /* Card Styling */
        .card {
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            transition: all 0.3s ease-in-out;
        }

        .card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        /* Label and Value Styling */
        .label {
            color: #6b7280;
            font-size: 0.9rem;
            font-weight: 600;
        }

        .value {
            color: #1f2937;
            font-size: 1.1rem;
            font-weight: 600;
        }

        /* Dropdown Styling */
        select {
            border: 1px solid #6b7280;
            padding: 8px;
            border-radius: 5px;
            background-color: #fff;
            color: #333;
            cursor: pointer;
            width: 100%;
        }

        select:focus {
            border-color: #1f2937;
        }

        /* Buttons */
        button {
            background-color: #3b82f6;
            border: none;
            color: white;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
            font-size: 14px;
        }

        button:hover {
            background-color: #2563eb;
        }

        .reject-btn {
            background-color: #ef4444;
        }

        .reject-btn:hover {
            background-color: #dc2626;
        }

        /* Order Items */
        .order-items .item-card {
            background-color: #f8fafc;
            border-left: 5px solid #3b82f6;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 15px;
        }

        /* Return Request Section */
        .return-request-section {
            background-color: #fef2f2;
            border-left: 5px solid #ef4444;
            padding: 10px;
            border-radius: 8px;
            margin-top: 10px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .order-grid {
                grid-template-columns: 1fr;
            }

            button {
                width: 100%;
                margin-top: 5px;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Order Details</h1>

        <div class="order-grid">
            <!-- Order Details -->
            <div class="card">
                <h2>Order Info</h2>
                <p><span class="label">Order ID:</span> <span class="value"><%= order.orderId %></span></p>
                <p><span class="label">Total Amount:</span> <span class="value">₹<%= order.finalAmount %></span></p>
                <p><span class="label">Payment Method:</span> <span class="value"><%= order.paymentMethod %></span></p>
                <p><span class="label">Order Date:</span> <span class="value"><%= new Date(order.createdOn).toLocaleDateString() %></span></p>

                <label class="label">Status:</label>
                <select id="status-<%= order.orderId %>" onchange="updateStatus('<%= order.orderId %>')" <%= ['Delivered', 'Return Request', 'Return Accepted', 'Return Rejected','payment pending'].includes(order.status) ? 'disabled' : '' %>>>
                    <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                    <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                    <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                    <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                    <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                    <option value="Return Request" <%= order.status === 'Return Request' ? 'selected' : '' %> disabled>Return Request</option>
                    <option value="Return Accepted" <%= order.status === 'Return Accepted' ? 'selected' : '' %> disabled>Return Accepted</option>
                    <option value="Return Rejected" <%= order.status === 'Return Rejected' ? 'selected' : '' %> disabled>Return Rejected</option>
                    <option value="payment pending" <%= order.status === 'payment pending' ? 'selected' : '' %> disabled>payment Pending</option>
                </select>                
            </div>

            <!-- Shipping Address -->
            <div class="card">
                <h2>Shipping Address</h2>
                <p><span class="label">Name:</span> <span class="value"><%= order.address.name %></span></p>
                <p><span class="label">City:</span> <span class="value"><%= order.address.city %>, <%= order.address.state %> - <%= order.address.pincode %></span></p>
                <p><span class="label">Phone:</span> <span class="value"><%= order.address.phone %></span></p>
            </div>
        </div>

        <!-- Order Items -->
        <div class="card order-items">
            <h2>Ordered Items</h2>
            <% order.orderItems.forEach(item => { %>
                <div class="item-card">
                    <p><strong>Product:</strong> <%= item.productName %></p>
                    <p><strong>Quantity:</strong> <%= item.quantity %></p>
                    <p><strong>Price:</strong> ₹<%= item.price %></p>

                    <% if (item.returnRequest?.status === 'Pending') { %>
                        <div class="return-request-section">
                            <h4>Return Request</h4>
                            <p><strong>Reason:</strong> <%= item.returnRequest.reason %></p>
                            <button onclick="handleReturn('<%= order.orderId %>', '<%= item.productId %>', 'Approved')">Approve</button>
                            <button class="reject-btn" onclick="handleReturn('<%= order.orderId %>', '<%= item.productId %>', 'Rejected')">Reject</button>
                        </div>
                    <% } %>
                </div>
            <% }) %>
        </div>
    </div>
</body>

<script>
    const finalAmount = '<%= order.finalAmount %>'

async function handleReturn(orderId, productId, status) {

    const response = await fetch('/admin/handleReturn', {
        method: 'POST',
        headers: {
            'Content-type': 'application/json'
        },
        body: JSON.stringify({ orderId, productId, status, finalAmount })
    })

    const result = await response.json()

            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: result.message,
                    confirmButtonColor: '#28a745',
                    timer: 3000,
                    showConfirmButton: false,
                    toast: true,
                    position: 'top-end'
                }).then(() => {
                    window.location.reload()
                })
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Error while updating the status!',
                    confirmButtonColor: '#dc3545'
                });
            }

}




    function updateStatus(itemId) {
        const status = document.getElementById(`status-${itemId}`).value;
        fetch('/admin/changeStatus', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ itemId, status })
        })
        .then(response => response.json())
        .then(data => {
            Swal.fire({
                icon: data.success ? 'success' : 'error',
                title: data.success ? 'Success!' : 'Oops!',
                text: data.message || 'Something went wrong.',
                confirmButtonText: 'OK'
            }).then(() => location.reload());
        })
        .catch(error => Swal.fire({ icon: 'error', title: 'Error!', text: 'Failed to update order status.' }));
    }
</script>

<%- include("../../views/partials/admin/footer") %>

