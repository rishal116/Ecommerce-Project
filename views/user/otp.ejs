<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Verification | Trendy Threads</title>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
  <style>
    :root {
      --primary: #ff3f6c;
      --primary-dark: #e6375f;
      --secondary: #535766;
      --light-gray: #f5f5f6;
      --medium-gray: #eaeaec;
      --text-dark: #282c3f;
      --text-light: #94969f;
      --success: #03a685;
      --error: #ff5722;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Inter', sans-serif;
      background-color: #fdfdfd;
      color: var(--text-dark);
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
    }
    
    .auth-container {
      width: 100%;
      max-width: 400px;
      background-color: white;
      border-radius: 4px;
      box-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
    }
    
    .auth-header {
      padding: 24px 30px;
      border-bottom: 1px solid var(--medium-gray);
    }
    
    .auth-header h1 {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 6px;
    }
    
    .auth-header p {
      color: var(--text-light);
      font-size: 14px;
    }
    
    .auth-form {
      padding: 30px;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-label {
      display: block;
      margin-bottom: 8px;
      font-size: 14px;
      font-weight: 500;
      color: var(--text-dark);
    }
    
    .form-control {
      width: 100%;
      padding: 12px 16px;
      border: 1px solid var(--medium-gray);
      border-radius: 4px;
      font-size: 14px;
      color: var(--text-dark);
      transition: all 0.2s ease;
      letter-spacing: 1px;
    }
    
    .form-control:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 2px rgba(255, 63, 108, 0.1);
    }
    
    .error-message {
      color: var(--error);
      font-size: 12px;
      margin-top: 6px;
      font-weight: 500;
    }
    
    .btn {
      display: block;
      width: 100%;
      padding: 12px;
      border: none;
      border-radius: 4px;
      font-size: 15px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
    }
    
    .btn-primary {
      background-color: var(--primary);
      color: white;
      margin-bottom: 16px;
    }
    
    .btn-primary:hover {
      background-color: var(--primary-dark);
    }
    
    .btn-primary:disabled {
      background-color: var(--text-light);
      cursor: not-allowed;
    }
    
    .btn-secondary {
      background-color: white;
      color: var(--primary);
      border: 1px solid var(--primary);
    }
    
    .btn-secondary:hover {
      background-color: rgba(255, 63, 108, 0.05);
    }
    
    .btn-secondary:disabled {
      color: var(--text-light);
      border-color: var(--medium-gray);
      cursor: not-allowed;
    }
    
    .error-alert {
      background-color: rgba(255, 87, 34, 0.1);
      color: var(--error);
      padding: 12px 16px;
      border-radius: 4px;
      margin-bottom: 20px;
      font-size: 14px;
      font-weight: 500;
    }
    
    .timer-container {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 20px 0;
      flex-direction: column;
    }
    
    .otp-timer {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 70px;
      height: 70px;
      border-radius: 50%;
      margin-bottom: 16px;
      position: relative;
    }
    
    .otp-timer::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      border: 3px solid var(--medium-gray);
    }
    
    .otp-timer::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      border: 3px solid var(--primary);
      clip: rect(0, 35px, 70px, 0);
      transform: rotate(0deg);
      transition: all 1s linear;
    }
    
    .timer-text {
      position: relative;
      z-index: 1;
      font-size: 22px;
      font-weight: 600;
      color: var(--text-dark);
    }
    
    .timer-text.expired {
      font-size: 14px;
      color: var(--error);
    }
    
    .timer-info {
      color: var(--text-light);
      font-size: 13px;
      margin-top: 8px;
      text-align: center;
    }
    
    .auth-footer {
      padding: 20px 30px;
      border-top: 1px solid var(--medium-gray);
      text-align: center;
    }
    
    .auth-footer p {
      color: var(--text-light);
      font-size: 13px;
    }
    
    @media (max-width: 480px) {
      .auth-container {
        box-shadow: none;
      }
      
      .auth-header,
      .auth-form,
      .auth-footer {
        padding: 20px;
      }
    }
  </style>
</head>
<body>
  <div class="auth-container">
    <div class="auth-header">
      <h1>Verify Your Email</h1>
      <p>We've sent a 6-digit OTP to your email</p>
    </div>
    
    <div class="auth-form">
      <% if (locals.message && message.length > 0) { %>
        <div class="error-alert"><%= message %></div>
      <% } %>
      
      <form id="otpForm">
        <div class="form-group">
          <label for="otp" class="form-label">Enter Verification Code</label>
          <input type="text" id="otp" name="otp" class="form-control" required maxlength="6" pattern="\d*" placeholder="- - - - - -">
          <div id="otpError" class="error-message"></div>
        </div>
        
        <div class="timer-container">
          <div class="otp-timer">
            <span id="timerValue" class="timer-text">60</span>
          </div>
          <div class="timer-info">Code expires in <span id="timerMinutes">01</span>:<span id="timerSeconds">00</span></div>
        </div>
        
        <button type="submit" id="v-email" class="btn btn-primary">VERIFY</button>
        <button type="button" id="resendBtn" class="btn btn-secondary" onclick="resendOTP()" disabled>RESEND OTP</button>
      </form>
    </div>
    
    <div class="auth-footer">
      <p>Need help? Contact <a href="mailto:trendythreads019@gmail.com" style="color: var(--primary); text-decoration: none;">trendythreads019@gmail.com</a></p>
    </div>
  </div>

  <script>
    let timerValue = 60;
    let timerElement = document.getElementById('timerValue');
    let timerMinutes = document.getElementById('timerMinutes');
    let timerSeconds = document.getElementById('timerSeconds');
    let resendButton = document.getElementById('resendBtn');
    let timerInterval;
    let isTimeUp = false;
    
    function updateTimerDisplay(seconds) {
      const mins = Math.floor(seconds / 60);
      const secs = seconds % 60;
      
      timerMinutes.textContent = mins.toString().padStart(2, '0');
      timerSeconds.textContent = secs.toString().padStart(2, '0');
      timerElement.textContent = seconds;
      
      // Update the timer circle animation
      const timerCircle = document.querySelector('.otp-timer::after');
      const rotationDegree = 360 - (seconds / 60 * 360);
      
      if (timerCircle) {
        if (rotationDegree <= 180) {
          timerCircle.style.transform = `rotate(${rotationDegree}deg)`;
          timerCircle.style.clip = 'rect(0, 35px, 70px, 0)';
        } else {
          timerCircle.style.transform = `rotate(${rotationDegree}deg)`;
          timerCircle.style.clip = 'rect(0, 70px, 70px, 0)';
        }
      }
    }
    
    function startTimer() {
      isTimeUp = false;
      resendButton.disabled = true;
      timerValue = 60;
      timerElement.textContent = timerValue;
      timerElement.classList.remove("expired");
      
      updateTimerDisplay(timerValue);
      
      timerInterval = setInterval(() => {
        if (timerValue > 0) {
          timerValue--;
          updateTimerDisplay(timerValue);
        } else {
          clearInterval(timerInterval);
          timerElement.textContent = "Expired";
          timerElement.classList.add("expired");
          resendButton.disabled = false;
          isTimeUp = true;
        }
      }, 1000);
    }
    
    function resendOTP() {
      clearInterval(timerInterval);
      startTimer();
      
      fetch('/resend-otp', { method: 'POST' })
        .then(response => response.json())
        .then(data => {
          Swal.fire({
            title: "OTP Sent!",
            text: "A new verification code has been sent to your email",
            icon: "success",
            confirmButtonColor: "#ff3f6c"
          });
        })
        .catch(error => {
          Swal.fire({
            title: "Error",
            text: "Failed to send new verification code. Please try again.",
            icon: "error",
            confirmButtonColor: "#ff3f6c"
          });
        });
    }
    
    document.getElementById('otpForm').addEventListener('submit', async function(event) {
      event.preventDefault();
      
      if (isTimeUp) {
        Swal.fire({
          title: "Code Expired",
          text: "Your verification code has expired. Please request a new one.",
          icon: "warning",
          confirmButtonColor: "#ff3f6c"
        });
        return;
      }
      
      const userOtp = document.getElementById('otp').value;
      const otpError = document.getElementById('otpError');
      
      // Basic validation
      if (userOtp.length !== 6 || !/^\d+$/.test(userOtp)) {
        otpError.textContent = "Please enter a valid 6-digit code";
        return;
      } else {
        otpError.textContent = "";
      }
      
      try {
        const response = await fetch('/verify-otp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ otp: userOtp })
        });
        
        const data = await response.json();

        console.log("data: ",data)
        
        if (response.ok) {
          Swal.fire({
            title: "Verified!",
            text: "Your email has been successfully verified",
            icon: "success",
            confirmButtonColor: "#ff3f6c"
          }).then(() => {
            window.location.href = "/";
          });
        } else {
          Swal.fire({
            title: "Invalid Code",
            text: data.message || "The verification code you entered is incorrect",
            icon: "error",
            confirmButtonColor: "#ff3f6c"
          });
        }
      } catch (error) {
        Swal.fire({
          title: "Error",
          text: "Something went wrong. Please try again.",
          icon: "error",
          confirmButtonColor: "#ff3f6c"
        });
      }
    });
    
    // Format OTP input
    document.getElementById('otp').addEventListener('input', function(e) {
      this.value = this.value.replace(/[^0-9]/g, '');
    });
    
    window.onload = startTimer;
  </script>
</body>
</html>
