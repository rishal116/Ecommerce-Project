<%- include('../../views/partials/user/header') %>


<!-- Bootstrap JS (for modal functionality) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<title>Your Profile</title>

<!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    .main-container {
        display: flex;
        flex-wrap: wrap;
        padding: 20px;
        margin: 0 auto;
    }

    .sidebar {
        flex: 1;
        min-width: 250px;
        max-width: 300px;
        background-color: #ffffff;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        margin-right: 20px;
    }

    .sidebar h3 {
        font-size: 1.5rem;
        margin-bottom: 20px;
        color: #333;
        font-weight: bold;
    }

    .sidebar a {
        display: block;
        color: #333;
        text-decoration: none;
        padding: 12px;
        margin: 12px 0;
        font-size: 1rem;
        border-radius: 5px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .sidebar a:hover {
        background-color: #f1f1f1;
    }

    .sidebar a.active {
        background-color: #e8f0fe;
        color: #1967d2;
        font-weight: 500;
    }

    .main-content {
        flex: 3;
        min-width: 600px;
        background-color: #ffffff;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

    .account-header {
        font-size: 1.75rem;
        margin-bottom: 20px;
        font-weight: bold;
        color: #333;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-group label {
        display: block;
        font-size: 1rem;
        margin-bottom: 8px;
        color: #333;
    }

    .form-group input {
        width: 100%;
        padding: 12px;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-bottom: 5px;
        box-sizing: border-box;
    }

    .form-group input:focus {
        border-color: #1967d2;
        outline: none;
    }

    button {
        padding: 12px 25px;
        background-color: #0FA5B2;
        color: #fff;
        font-size: 1rem;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    button:hover {
        background-color: #0FA5B2;
    }
</style>

<div class="main-container">
    <!-- Sidebar -->
    <div class="sidebar">
        <h3>Profile Settings</h3>
        <a href="/userProfile" class="active">Personal Information</a>
        <a href="/myAddress">Your Addresses</a>
        <a href="/wishlist">Wishlist</a>
        <a href="/myorders">Your Orders</a>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="account-header">Your Profile</div>

        <form id="profile-form" action="/saveAccount" method="post">
            <div class="form-group">
                <label class="form-label required">Full Name</label>
                <input type="text" class="form-input" name="fullName" id="fullName" value="<%= user.name %>" required>
            </div>

            <div class="form-group">
                <label class="form-label required">Email Id</label>
                <input type="email" class="form-input" id="email" name="email" value="<%= user.email %>" readonly required>
            </div>
            <button type="button" id="change-email">CHANGE</button>

            <div class="form-group" style="display: none;" id="new-email-container">
                <label class="form-label required">New Email</label>
                <input type="email" class="form-input" id="new-email" name="newEmail" required>
                <button type="button" id="send-otp">Send OTP</button>
            </div>

            <div class="form-group" style="display: none;" id="verify-div">
                <input type="number" placeholder="Enter OTP" id="otp-field">
                <button type="button" id="verify-otp">Verify OTP</button>
            </div>

<!-- Reset Password Button -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#resetPasswordModal" style="color:#0FA5B2;">
    Reset Password
</button>

<!-- Reset Password Modal -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1" aria-labelledby="resetPasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="resetPasswordModalLabel">Reset Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reset-password-form">
                    <div class="mb-3">
                        <label class="form-label">Old Password</label>
                        <input type="password" id="old-password" class="form-control" placeholder="Enter old password" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">New Password</label>
                        <input type="password" id="new-password" class="form-control" placeholder="Enter new password" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Confirm New Password</label>
                        <input type="password" id="confirm-password" class="form-control" placeholder="Confirm new password" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="update-password">Update Password</button>
            </div>
        </div>
    </div>
</div>



            <div class="form-group">
                <label class="form-label required">Mobile Number</label>
                <input type="tel" class="form-input" id="mobile" name="mobile" value="<%= user.phone %>" required>
            </div>

            <button type="submit" class="save-button" id="save-change">SAVE CHANGES</button>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const changeEmailButton = document.getElementById('change-email');
    const newEmailContainer = document.getElementById('new-email-container');
    const sendOtpButton = document.getElementById('send-otp');
    const verifyOtpButton = document.getElementById('verify-otp');

    changeEmailButton.addEventListener('click', () => {
        if (newEmailContainer.style.display === 'block') {
            newEmailContainer.style.display = 'none';
            verifyDiv.style.display = 'none'; // Hide OTP section as well
        } else {
            newEmailContainer.style.display = 'block';
        }
    });

    // Send OTP
    if (sendOtpButton) {
        sendOtpButton.addEventListener('click', async () => {
            const newEmail = document.getElementById('new-email').value;
            if (!newEmail) {
                Swal.fire("Enter a valid email", "", "warning");
                return;
            }

            try {
                const response = await fetch('/sendOtp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ newEmail, value: 'edit' })
                });

                const data = await response.json();

                if (!data.success) {
                    Swal.fire("Error", data.message, "error");
                    return;
                }

                Swal.fire("OTP Sent!", data.message, "success");
                document.getElementById('verify-div').style.display = 'block';
            } catch (error) {
                Swal.fire("Error", "Failed to send OTP. Please check your internet connection.", "error");
            }
        });
    }

    // Verify OTP and Update Email
    if (verifyOtpButton) {
        verifyOtpButton.addEventListener('click', async () => {
            const otpValue = document.getElementById('otp-field').value;
            if (!otpValue) {
                Swal.fire("Enter OTP", "", "warning");
                return;
            }

            try {
                const response = await fetch('/newEmail-verify', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ otpValue })
                });

                const data = await response.json();
                if (!data.success) {
                    Swal.fire("Invalid OTP", "Please try again", "error");
                    return;
                }

                // OTP Verified - Now Update Email
                const newEmail = document.getElementById('new-email').value;
                const saveResponse = await fetch('/saveEmail', {
                    method: 'PATCH',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ newEmail })
                });

                const saveData = await saveResponse.json();

                if (!saveData.success) {
                    Swal.fire("Error", saveData.message, "error");
                    return;
                }

                Swal.fire({
                    title: "Email Updated Successfully! ",
                    text: saveData.message,
                    icon: "success",
                    timer: 2000,
                    toast: true,
                    position: "top-end"
                }).then(() => {
                    window.location.reload();
                });

            } catch (error) {
                Swal.fire("Error", "Failed to verify OTP or update email.", "error");
            }
        });
    }

    // Save Profile
    document.getElementById('save-change').addEventListener('click', async (e) => {
        e.preventDefault();
        const fullName = document.getElementById('fullName').value;
        const mobile = document.getElementById('mobile').value;

        try {
            const response = await fetch('/saveAccount', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ fullName, mobile })
            });

            const data = await response.json();

            if (!data.success) {
                Swal.fire("Error", data.message, "error");
                return;
            }

            Swal.fire("Profile Updated!", data.message, "success").then(() => {
                window.location.reload();
            });
        } catch (error) {
            Swal.fire("Error", "Failed to update profile", "error");
        }
    });
});

</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const updatePasswordBtn = document.getElementById("update-password");
    
        updatePasswordBtn.addEventListener("click", async () => {
            const oldPassword = document.getElementById("old-password").value;
            const newPassword = document.getElementById("new-password").value;
            const confirmPassword = document.getElementById("confirm-password").value;
    
            if (!oldPassword || !newPassword || !confirmPassword) {
                Swal.fire({
                    icon: "warning",
                    title: "Incomplete Fields",
                    text: "Please fill in all fields.",
                });
                return;
            }
    
            if (newPassword.length < 6) {
                Swal.fire({
                    icon: "warning",
                    title: "Weak Password",
                    text: "New password must be at least 6 characters long.",
                });
                return;
            }
    
            if (newPassword !== confirmPassword) {
                Swal.fire({
                    icon: "error",
                    title: "Mismatch",
                    text: "New passwords do not match.",
                });
                return;
            }
    
            try {
                const response = await fetch("/resetPassword", {
                    method: "PATCH",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ oldPassword, newPassword, confirmPassword })
                });
    
                const data = await response.json();
                if (!data.success) {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: data.message,
                    });
                    return;
                }
    
                Swal.fire({
                    icon: "success",
                    title: "Success",
                    text: "Password updated successfully!",
                }).then(() => {
                    location.reload();
                });
            } catch (error) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Failed to update password.",
                });
            }
        });
    });
    </script>
    

<%- include("../../views/partials/user/footer") %>


